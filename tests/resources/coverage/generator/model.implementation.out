/* The content of this file was generated using a modified C profile of libCellML 0.4.0. */

double xor(double x, double y)
{
    return (x != 0.0) ^ (y != 0.0);
}

double min(double x, double y)
{
    return (x < y)?x:y;
}

double max(double x, double y)
{
    return (x > y)?x:y;
}

double sec(double x)
{
    return 1.0/cos(x);
}

double csc(double x)
{
    return 1.0/sin(x);
}

double cot(double x)
{
    return 1.0/tan(x);
}

double sech(double x)
{
    return 1.0/cosh(x);
}

double csch(double x)
{
    return 1.0/sinh(x);
}

double coth(double x)
{
    return 1.0/tanh(x);
}

double asec(double x)
{
    return acos(1.0/x);
}

double acsc(double x)
{
    return asin(1.0/x);
}

double acot(double x)
{
    return atan(1.0/x);
}

double asech(double x)
{
    double oneOverX = 1.0/x;

    return log(oneOverX+sqrt(oneOverX*oneOverX-1.0));
}

double acsch(double x)
{
    double oneOverX = 1.0/x;

    return log(oneOverX+sqrt(oneOverX*oneOverX+1.0));
}

double acoth(double x)
{
    double oneOverX = 1.0/x;

    return 0.5*log((1.0+oneOverX)/(1.0-oneOverX));
}

double * createStatesArray()
{
    return (double *) malloc(STATE_COUNT*sizeof(double));
}

double * createVariablesArray()
{
    return (double *) malloc(VARIABLE_COUNT*sizeof(double));
}

void deleteArray(double *array)
{
    free(array);
}

void initialiseVariables(double *states, double *variables)
{
    variables[196] = 1.0;
    variables[197] = 2.0;
    variables[198] = 3.0;
    variables[199] = 4.0;
    variables[200] = 5.0;
    variables[201] = 6.0;
    variables[202] = 7.0;
    variables[175] = 123.0;
    variables[176] = 123.456789;
    variables[177] = 123.0e99;
    variables[178] = 123.456789e99;
    variables[180] = 1.0;
    variables[181] = 0.0;
    variables[182] = 2.71828182845905;
    variables[183] = 3.14159265358979;
    variables[184] = INFINITY;
    variables[185] = NAN;
    states[0] = 0.0;
}

void computeComputedConstants(double *variables)
{
    variables[0] = eq(variables[196], variables[197]);
    variables[1] = variables[196]/eq(variables[197], variables[197]);
    variables[2] = neq(variables[196], variables[197]);
    variables[3] = variables[196]/neq(variables[197], variables[198]);
    variables[4] = lt(variables[196], variables[197]);
    variables[5] = variables[196]/lt(variables[197], variables[198]);
    variables[6] = leq(variables[196], variables[197]);
    variables[7] = variables[196]/leq(variables[197], variables[198]);
    variables[8] = gt(variables[196], variables[197]);
    variables[9] = variables[196]/gt(variables[197], variables[198]);
    variables[10] = geq(variables[196], variables[197]);
    variables[11] = variables[196]/geq(variables[197], variables[198]);
    variables[12] = and(variables[196], variables[197]);
    variables[13] = and(variables[196], and(variables[197], variables[198]));
    variables[14] = and(lt(variables[196], variables[197]), gt(variables[198], variables[199]));
    variables[15] = and(variables[196]+variables[197], gt(variables[198], variables[199]));
    variables[16] = and(variables[196], gt(variables[197], variables[198]));
    variables[17] = and(variables[196]-variables[197], gt(variables[198], variables[199]));
    variables[18] = and(-variables[196], gt(variables[197], variables[198]));
    variables[19] = and(pow(variables[196], variables[197]), gt(variables[198], variables[199]));
    variables[20] = and(pow(variables[196], 1.0/variables[197]), gt(variables[198], variables[199]));
    variables[21] = and(lt(variables[196], variables[197]), variables[198]+variables[199]);
    variables[22] = and(lt(variables[196], variables[197]), variables[198]);
    variables[23] = and(lt(variables[196], variables[197]), variables[198]-variables[199]);
    variables[24] = and(lt(variables[196], variables[197]), -variables[198]);
    variables[25] = and(lt(variables[196], variables[197]), pow(variables[198], variables[199]));
    variables[26] = and(lt(variables[196], variables[197]), pow(variables[198], 1.0/variables[199]));
    variables[27] = variables[196]/and(variables[197], variables[198]);
    variables[28] = or(variables[196], variables[197]);
    variables[29] = or(variables[196], or(variables[197], variables[198]));
    variables[30] = or(lt(variables[196], variables[197]), gt(variables[198], variables[199]));
    variables[31] = or(variables[196]+variables[197], gt(variables[198], variables[199]));
    variables[32] = or(variables[196], gt(variables[197], variables[198]));
    variables[33] = or(variables[196]-variables[197], gt(variables[198], variables[199]));
    variables[34] = or(-variables[196], gt(variables[197], variables[198]));
    variables[35] = or(pow(variables[196], variables[197]), gt(variables[198], variables[199]));
    variables[36] = or(pow(variables[196], 1.0/variables[197]), gt(variables[198], variables[199]));
    variables[37] = or(lt(variables[196], variables[197]), variables[198]+variables[199]);
    variables[38] = or(lt(variables[196], variables[197]), variables[198]);
    variables[39] = or(lt(variables[196], variables[197]), variables[198]-variables[199]);
    variables[40] = or(lt(variables[196], variables[197]), -variables[198]);
    variables[41] = or(lt(variables[196], variables[197]), pow(variables[198], variables[199]));
    variables[42] = or(lt(variables[196], variables[197]), pow(variables[198], 1.0/variables[199]));
    variables[43] = variables[196]/or(variables[197], variables[198]);
    variables[44] = xor(variables[196], variables[197]);
    variables[45] = xor(variables[196], xor(variables[197], variables[198]));
    variables[46] = xor(lt(variables[196], variables[197]), gt(variables[198], variables[199]));
    variables[47] = xor(variables[196]+variables[197], gt(variables[198], variables[199]));
    variables[48] = xor(variables[196], gt(variables[197], variables[198]));
    variables[49] = xor(variables[196]-variables[197], gt(variables[198], variables[199]));
    variables[50] = xor(-variables[196], gt(variables[197], variables[198]));
    variables[51] = xor(pow(variables[196], variables[197]), gt(variables[198], variables[199]));
    variables[52] = xor(pow(variables[196], 1.0/variables[197]), gt(variables[198], variables[199]));
    variables[53] = xor(lt(variables[196], variables[197]), variables[198]+variables[199]);
    variables[54] = xor(lt(variables[196], variables[197]), variables[198]);
    variables[55] = xor(lt(variables[196], variables[197]), variables[198]-variables[199]);
    variables[56] = xor(lt(variables[196], variables[197]), -variables[198]);
    variables[57] = xor(lt(variables[196], variables[197]), pow(variables[198], variables[199]));
    variables[58] = xor(lt(variables[196], variables[197]), pow(variables[198], 1.0/variables[199]));
    variables[59] = variables[196]/xor(variables[197], variables[198]);
    variables[60] = not(variables[196]);
    variables[61] = variables[196]+variables[197];
    variables[62] = variables[196]+variables[197]+variables[198];
    variables[63] = lt(variables[196], variables[197])+gt(variables[198], variables[199]);
    variables[64] = variables[196];
    variables[65] = variables[196]-variables[197];
    variables[66] = lt(variables[196], variables[197])-gt(variables[198], variables[199]);
    variables[67] = lt(variables[196], variables[197])-(variables[198]+variables[199]);
    variables[68] = lt(variables[196], variables[197])-variables[198];
    variables[69] = -variables[196];
    variables[70] = -lt(variables[196], variables[197]);
    variables[71] = variables[196]*variables[197];
    variables[72] = variables[196]*variables[197]*variables[198];
    variables[73] = lt(variables[196], variables[197])*gt(variables[198], variables[199]);
    variables[74] = (variables[196]+variables[197])*gt(variables[198], variables[199]);
    variables[75] = variables[196]*gt(variables[197], variables[198]);
    variables[76] = (variables[196]-variables[197])*gt(variables[198], variables[199]);
    variables[77] = -variables[196]*gt(variables[197], variables[198]);
    variables[78] = lt(variables[196], variables[197])*(variables[198]+variables[199]);
    variables[79] = lt(variables[196], variables[197])*variables[198];
    variables[80] = lt(variables[196], variables[197])*(variables[198]-variables[199]);
    variables[81] = lt(variables[196], variables[197])*-variables[198];
    variables[82] = variables[196]/variables[197];
    variables[83] = lt(variables[196], variables[197])/gt(variables[199], variables[198]);
    variables[84] = (variables[196]+variables[197])/gt(variables[199], variables[198]);
    variables[85] = variables[196]/gt(variables[198], variables[197]);
    variables[86] = (variables[196]-variables[197])/gt(variables[199], variables[198]);
    variables[87] = -variables[196]/gt(variables[198], variables[197]);
    variables[88] = lt(variables[196], variables[197])/(variables[198]+variables[199]);
    variables[89] = lt(variables[196], variables[197])/variables[198];
    variables[90] = lt(variables[196], variables[197])/(variables[198]-variables[199]);
    variables[91] = lt(variables[196], variables[197])/-variables[198];
    variables[92] = lt(variables[196], variables[197])/(variables[198]*variables[199]);
    variables[93] = lt(variables[196], variables[197])/(variables[198]/variables[199]);
    variables[94] = sqrt(variables[196]);
    variables[95] = pow(variables[196], 2.0);
    variables[96] = pow(variables[196], 3.0);
    variables[97] = pow(variables[196], variables[197]);
    variables[98] = pow(leq(variables[196], variables[197]), geq(variables[198], variables[199]));
    variables[99] = pow(variables[196]+variables[197], geq(variables[198], variables[199]));
    variables[100] = pow(variables[196], geq(variables[197], variables[198]));
    variables[101] = pow(variables[196]-variables[197], geq(variables[198], variables[199]));
    variables[102] = pow(-variables[196], geq(variables[197], variables[198]));
    variables[103] = pow(variables[196]*variables[197], geq(variables[198], variables[199]));
    variables[104] = pow(variables[196]/variables[197], geq(variables[198], variables[199]));
    variables[105] = pow(leq(variables[196], variables[197]), variables[198]+variables[199]);
    variables[106] = pow(leq(variables[196], variables[197]), variables[198]);
    variables[107] = pow(leq(variables[196], variables[197]), variables[198]-variables[199]);
    variables[108] = pow(leq(variables[196], variables[197]), -variables[198]);
    variables[109] = pow(leq(variables[196], variables[197]), variables[198]*variables[199]);
    variables[110] = pow(leq(variables[196], variables[197]), variables[198]/variables[199]);
    variables[111] = pow(leq(variables[196], variables[197]), pow(variables[198], variables[199]));
    variables[112] = pow(leq(variables[196], variables[197]), pow(variables[198], 1.0/variables[199]));
    variables[113] = sqrt(variables[196]);
    variables[114] = sqrt(variables[196]);
    variables[115] = pow(variables[196], 1.0/3.0);
    variables[116] = pow(variables[196], 1.0/variables[197]);
    variables[117] = pow(lt(variables[196], variables[197]), 1.0/gt(variables[199], variables[198]));
    variables[118] = pow(variables[196]+variables[197], 1.0/gt(variables[199], variables[198]));
    variables[119] = pow(variables[196], 1.0/gt(variables[198], variables[197]));
    variables[120] = pow(variables[196]-variables[197], 1.0/gt(variables[199], variables[198]));
    variables[121] = pow(-variables[196], 1.0/gt(variables[198], variables[197]));
    variables[122] = pow(variables[196]*variables[197], 1.0/gt(variables[199], variables[198]));
    variables[123] = pow(variables[196]/variables[197], 1.0/gt(variables[199], variables[198]));
    variables[124] = pow(lt(variables[196], variables[197]), 1.0/(variables[198]+variables[199]));
    variables[125] = pow(lt(variables[196], variables[197]), 1.0/variables[198]);
    variables[126] = pow(lt(variables[196], variables[197]), 1.0/(variables[198]-variables[199]));
    variables[127] = pow(lt(variables[196], variables[197]), 1.0/-variables[198]);
    variables[128] = pow(lt(variables[196], variables[197]), 1.0/(variables[198]*variables[199]));
    variables[129] = pow(lt(variables[196], variables[197]), 1.0/(variables[198]/variables[199]));
    variables[130] = pow(lt(variables[196], variables[197]), 1.0/pow(variables[198], variables[199]));
    variables[131] = pow(lt(variables[196], variables[197]), 1.0/pow(variables[198], 1.0/variables[199]));
    variables[132] = fabs(variables[196]);
    variables[133] = exp(variables[196]);
    variables[134] = log(variables[196]);
    variables[135] = log10(variables[196]);
    variables[136] = log(variables[196])/log(2.0);
    variables[137] = log10(variables[196]);
    variables[138] = log(variables[196])/log(variables[197]);
    variables[139] = ceil(variables[196]);
    variables[140] = floor(variables[196]);
    variables[141] = min(variables[196], variables[197]);
    variables[142] = min(variables[196], min(variables[197], variables[198]));
    variables[143] = max(variables[196], variables[197]);
    variables[144] = max(variables[196], max(variables[197], variables[198]));
    variables[145] = fmod(variables[196], variables[197]);
    variables[146] = sin(variables[196]);
    variables[147] = cos(variables[196]);
    variables[148] = tan(variables[196]);
    variables[149] = sec(variables[196]);
    variables[150] = csc(variables[196]);
    variables[151] = cot(variables[196]);
    variables[152] = sinh(variables[196]);
    variables[153] = cosh(variables[196]);
    variables[154] = tanh(variables[196]);
    variables[155] = sech(variables[196]);
    variables[156] = csch(variables[196]);
    variables[157] = coth(variables[196]);
    variables[158] = asin(variables[196]);
    variables[159] = acos(variables[196]);
    variables[160] = atan(variables[196]);
    variables[161] = asec(variables[196]);
    variables[162] = acsc(variables[196]);
    variables[163] = acot(variables[196]);
    variables[164] = asinh(variables[196]);
    variables[165] = acosh(variables[196]);
    variables[166] = atanh(variables[196]/2.0);
    variables[167] = asech(variables[196]);
    variables[168] = acsch(variables[196]);
    variables[169] = acoth(2.0*variables[196]);
    variables[170] = (gt(variables[196], variables[197]))?variables[196]:NAN;
    variables[171] = (gt(variables[196], variables[197]))?variables[196]:variables[198];
    variables[172] = (gt(variables[196], variables[197]))?variables[196]:(gt(variables[198], variables[199]))?variables[198]:(gt(variables[200], variables[201]))?variables[200]:NAN;
    variables[173] = (gt(variables[196], variables[197]))?variables[196]:(gt(variables[198], variables[199]))?variables[198]:(gt(variables[200], variables[201]))?variables[200]:variables[202];
    variables[174] = 123.0+((gt(variables[196], variables[197]))?variables[196]:NAN);
    variables[179] = variables[196];
    variables[186] = and(variables[196], variables[197])+((gt(variables[198], variables[199]))?variables[197]:NAN)+variables[200]+and(variables[201], variables[202]);
    variables[187] = and(variables[196], variables[197])-(((gt(variables[198], variables[199]))?variables[197]:NAN)-(variables[200]-((gt(variables[198], variables[199]))?variables[197]:NAN)))-and(variables[201], variables[202]);
    variables[188] = and(variables[196], variables[197])*((gt(variables[198], variables[199]))?variables[197]:NAN)*variables[200]*((gt(variables[198], variables[199]))?variables[197]:NAN)*and(variables[201], variables[202]);
    variables[189] = and(variables[196], variables[197])/(((gt(variables[198], variables[199]))?variables[197]:NAN)/(variables[200]/((gt(variables[198], variables[199]))?variables[197]:NAN)));
    variables[190] = and(or(variables[196], variables[197]), and(xor(variables[196], variables[197]), and((gt(variables[198], variables[199]))?variables[197]:NAN, and(and(and(variables[200], (gt(variables[198], variables[199]))?variables[197]:NAN), xor(variables[196], variables[197])), or(variables[196], variables[197])))));
    variables[191] = or(and(variables[196], variables[197]), or(xor(variables[196], variables[197]), or((gt(variables[198], variables[199]))?variables[197]:NAN, or(or(or(variables[200], (gt(variables[198], variables[199]))?variables[197]:NAN), xor(variables[196], variables[197])), and(variables[196], variables[197])))));
    variables[192] = xor(and(variables[196], variables[197]), xor(or(variables[196], variables[197]), xor((gt(variables[198], variables[199]))?variables[197]:NAN, xor(xor(xor(variables[200], (gt(variables[198], variables[199]))?variables[197]:NAN), or(variables[196], variables[197])), and(variables[196], variables[197])))));
    variables[193] = pow(and(variables[196], variables[197]), pow((gt(variables[198], variables[199]))?variables[197]:NAN, pow(pow(variables[200], (gt(variables[198], variables[199]))?variables[197]:NAN), and(variables[196], variables[197]))));
    variables[194] = pow(pow(pow(and(variables[196], variables[197]), 1.0/pow((gt(variables[198], variables[199]))?variables[197]:NAN, 1.0/variables[200])), 1.0/((gt(variables[198], variables[199]))?variables[197]:NAN)), 1.0/and(variables[196], variables[197]));
    variables[195] = -and(variables[196], variables[197])+-((gt(variables[198], variables[199]))?variables[197]:NAN);
}

void computeRates(double voi, double *states, double *rates, double *variables)
{
    rates[0] = 1.0;
}

void computeVariables(double voi, double *states, double *rates, double *variables)
{
}
