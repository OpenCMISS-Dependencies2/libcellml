/* The content of this file was generated using a modified C profile of libCellML 0.4.0. */

#include "customheaderfile.h"

double min(double x, double y)
{
    return (x < y)?x:y;
}

double max(double x, double y)
{
    return (x > y)?x:y;
}

double sec(double x)
{
    return 1.0/cos(x);
}

double csc(double x)
{
    return 1.0/sin(x);
}

double cot(double x)
{
    return 1.0/tan(x);
}

double sech(double x)
{
    return 1.0/cosh(x);
}

double csch(double x)
{
    return 1.0/sinh(x);
}

double coth(double x)
{
    return 1.0/tanh(x);
}

double asec(double x)
{
    return acos(1.0/x);
}

double acsc(double x)
{
    return asin(1.0/x);
}

double acot(double x)
{
    return atan(1.0/x);
}

double asech(double x)
{
    double oneOverX = 1.0/x;

    return log(oneOverX+sqrt(oneOverX*oneOverX-1.0));
}

double acsch(double x)
{
    double oneOverX = 1.0/x;

    return log(oneOverX+sqrt(oneOverX*oneOverX+1.0));
}

double acoth(double x)
{
    double oneOverX = 1.0/x;

    return 0.5*log((1.0+oneOverX)/(1.0-oneOverX));
}

void initialiseVariables(double *states, double *variables)
{
    variables[179] = 1.0;
    variables[180] = 2.0;
    variables[181] = 3.0;
    variables[182] = 4.0;
    variables[183] = 5.0;
    variables[184] = 6.0;
    variables[185] = 7.0;
    variables[168] = 123.0;
    variables[169] = 123.456789;
    variables[170] = 123.0e99;
    variables[171] = 123.456789e99;
    variables[173] = 1.0;
    variables[174] = 0.0;
    variables[175] = 2.71828182845905;
    variables[176] = 3.14159265358979;
    variables[177] = INFINITY;
    variables[178] = NAN;
    states[0] = 0.0;
}

void computeComputedConstants(double *variables)
{
    variables[0] = variables[179] == variables[180];
    variables[1] = variables[179]/(variables[180] == variables[180]);
    variables[2] = variables[179] != variables[180];
    variables[3] = variables[179]/(variables[180] != variables[181]);
    variables[4] = variables[179] < variables[180];
    variables[5] = variables[179] <= variables[180];
    variables[6] = variables[179] > variables[180];
    variables[7] = variables[179] >= variables[180];
    variables[8] = variables[179] && variables[180];
    variables[9] = variables[179] && variables[180] && variables[181];
    variables[10] = (variables[179] < variables[180]) && (variables[181] > variables[182]);
    variables[11] = (variables[179]+variables[180]) && (variables[181] > variables[182]);
    variables[12] = variables[179] && (variables[180] > variables[181]);
    variables[13] = (variables[179]-variables[180]) && (variables[181] > variables[182]);
    variables[14] = -variables[179] && (variables[180] > variables[181]);
    variables[15] = (variables[179]^^variables[180]) && (variables[181] > variables[182]);
    variables[16] = (variables[179]^^(1.0/variables[180])) && (variables[181] > variables[182]);
    variables[17] = (variables[179] < variables[180]) && (variables[181]+variables[182]);
    variables[18] = (variables[179] < variables[180]) && variables[181];
    variables[19] = (variables[179] < variables[180]) && (variables[181]-variables[182]);
    variables[20] = (variables[179] < variables[180]) && -variables[181];
    variables[21] = (variables[179] < variables[180]) && (variables[181]^^variables[182]);
    variables[22] = (variables[179] < variables[180]) && (variables[181]^^(1.0/variables[182]));
    variables[23] = variables[179] || variables[180];
    variables[24] = variables[179] || variables[180] || variables[181];
    variables[25] = (variables[179] < variables[180]) || (variables[181] > variables[182]);
    variables[26] = (variables[179]+variables[180]) || (variables[181] > variables[182]);
    variables[27] = variables[179] || (variables[180] > variables[181]);
    variables[28] = (variables[179]-variables[180]) || (variables[181] > variables[182]);
    variables[29] = -variables[179] || (variables[180] > variables[181]);
    variables[30] = (variables[179]^^variables[180]) || (variables[181] > variables[182]);
    variables[31] = (variables[179]^^(1.0/variables[180])) || (variables[181] > variables[182]);
    variables[32] = (variables[179] < variables[180]) || (variables[181]+variables[182]);
    variables[33] = (variables[179] < variables[180]) || variables[181];
    variables[34] = (variables[179] < variables[180]) || (variables[181]-variables[182]);
    variables[35] = (variables[179] < variables[180]) || -variables[181];
    variables[36] = (variables[179] < variables[180]) || (variables[181]^^variables[182]);
    variables[37] = (variables[179] < variables[180]) || (variables[181]^^(1.0/variables[182]));
    variables[38] = variables[179]^variables[180];
    variables[39] = variables[179]^variables[180]^variables[181];
    variables[40] = (variables[179] < variables[180])^(variables[181] > variables[182]);
    variables[41] = (variables[179]+variables[180])^(variables[181] > variables[182]);
    variables[42] = variables[179]^(variables[180] > variables[181]);
    variables[43] = (variables[179]-variables[180])^(variables[181] > variables[182]);
    variables[44] = -variables[179]^(variables[180] > variables[181]);
    variables[45] = (variables[179]^^variables[180])^(variables[181] > variables[182]);
    variables[46] = (variables[179]^^(1.0/variables[180]))^(variables[181] > variables[182]);
    variables[47] = (variables[179] < variables[180])^(variables[181]+variables[182]);
    variables[48] = (variables[179] < variables[180])^variables[181];
    variables[49] = (variables[179] < variables[180])^(variables[181]-variables[182]);
    variables[50] = (variables[179] < variables[180])^-variables[181];
    variables[51] = (variables[179] < variables[180])^(variables[181]^^variables[182]);
    variables[52] = (variables[179] < variables[180])^(variables[181]^^(1.0/variables[182]));
    variables[53] = !variables[179];
    variables[54] = variables[179]+variables[180];
    variables[55] = variables[179]+variables[180]+variables[181];
    variables[56] = (variables[179] < variables[180])+(variables[181] > variables[182]);
    variables[57] = variables[179];
    variables[58] = variables[179]-variables[180];
    variables[59] = (variables[179] < variables[180])-(variables[181] > variables[182]);
    variables[60] = (variables[179] < variables[180])-(variables[181]+variables[182]);
    variables[61] = (variables[179] < variables[180])-variables[181];
    variables[62] = -variables[179];
    variables[63] = -(variables[179] < variables[180]);
    variables[64] = variables[179]*variables[180];
    variables[65] = variables[179]*variables[180]*variables[181];
    variables[66] = (variables[179] < variables[180])*(variables[181] > variables[182]);
    variables[67] = (variables[179]+variables[180])*(variables[181] > variables[182]);
    variables[68] = variables[179]*(variables[180] > variables[181]);
    variables[69] = (variables[179]-variables[180])*(variables[181] > variables[182]);
    variables[70] = -variables[179]*(variables[180] > variables[181]);
    variables[71] = (variables[179] < variables[180])*(variables[181]+variables[182]);
    variables[72] = (variables[179] < variables[180])*variables[181];
    variables[73] = (variables[179] < variables[180])*(variables[181]-variables[182]);
    variables[74] = (variables[179] < variables[180])*-variables[181];
    variables[75] = variables[179]/variables[180];
    variables[76] = (variables[179] < variables[180])/(variables[182] > variables[181]);
    variables[77] = (variables[179]+variables[180])/(variables[182] > variables[181]);
    variables[78] = variables[179]/(variables[181] > variables[180]);
    variables[79] = (variables[179]-variables[180])/(variables[182] > variables[181]);
    variables[80] = -variables[179]/(variables[181] > variables[180]);
    variables[81] = (variables[179] < variables[180])/(variables[181]+variables[182]);
    variables[82] = (variables[179] < variables[180])/variables[181];
    variables[83] = (variables[179] < variables[180])/(variables[181]-variables[182]);
    variables[84] = (variables[179] < variables[180])/-variables[181];
    variables[85] = (variables[179] < variables[180])/(variables[181]*variables[182]);
    variables[86] = (variables[179] < variables[180])/(variables[181]/variables[182]);
    variables[87] = sqrt(variables[179]);
    variables[88] = sqr(variables[179]);
    variables[89] = variables[179]^^3.0;
    variables[90] = variables[179]^^variables[180];
    variables[91] = (variables[179] < variables[180])^^(variables[181] > variables[182]);
    variables[92] = (variables[179]+variables[180])^^(variables[181] > variables[182]);
    variables[93] = variables[179]^^(variables[180] > variables[181]);
    variables[94] = (variables[179]-variables[180])^^(variables[181] > variables[182]);
    variables[95] = (-variables[179])^^(variables[180] > variables[181]);
    variables[96] = (variables[179]*variables[180])^^(variables[181] > variables[182]);
    variables[97] = (variables[179]/variables[180])^^(variables[181] > variables[182]);
    variables[98] = (variables[179] < variables[180])^^(variables[181]+variables[182]);
    variables[99] = (variables[179] < variables[180])^^variables[181];
    variables[100] = (variables[179] < variables[180])^^variables[181]-variables[182];
    variables[101] = (variables[179] < variables[180])^^-variables[181];
    variables[102] = (variables[179] < variables[180])^^(variables[181]*variables[182]);
    variables[103] = (variables[179] < variables[180])^^(variables[181]/variables[182]);
    variables[104] = (variables[179] < variables[180])^^(variables[181]^^variables[182]);
    variables[105] = (variables[179] < variables[180])^^(variables[181]^^(1.0/variables[182]));
    variables[106] = sqrt(variables[179]);
    variables[107] = sqrt(variables[179]);
    variables[108] = variables[179]^^(1.0/3.0);
    variables[109] = variables[179]^^(1.0/variables[180]);
    variables[110] = (variables[179] < variables[180])^^(1.0/(variables[182] > variables[181]));
    variables[111] = (variables[179]+variables[180])^^(1.0/(variables[182] > variables[181]));
    variables[112] = variables[179]^^(1.0/(variables[181] > variables[180]));
    variables[113] = (variables[179]-variables[180])^^(1.0/(variables[182] > variables[181]));
    variables[114] = (-variables[179])^^(1.0/(variables[181] > variables[180]));
    variables[115] = (variables[179]*variables[180])^^(1.0/(variables[182] > variables[181]));
    variables[116] = (variables[179]/variables[180])^^(1.0/(variables[182] > variables[181]));
    variables[117] = (variables[179] < variables[180])^^(1.0/(variables[181]+variables[182]));
    variables[118] = (variables[179] < variables[180])^^(1.0/variables[181]);
    variables[119] = (variables[179] < variables[180])^^(1.0/(variables[181]-variables[182]));
    variables[120] = (variables[179] < variables[180])^^(1.0/(-variables[181]));
    variables[121] = (variables[179] < variables[180])^^(1.0/(variables[181]*variables[182]));
    variables[122] = (variables[179] < variables[180])^^(1.0/(variables[181]/variables[182]));
    variables[123] = (variables[179] < variables[180])^^(1.0/(variables[181]^^variables[182]));
    variables[124] = (variables[179] < variables[180])^^(1.0/(variables[181]^^(1.0/variables[182])));
    variables[125] = fabs(variables[179]);
    variables[126] = exp(variables[179]);
    variables[127] = log(variables[179]);
    variables[128] = log10(variables[179]);
    variables[129] = log(variables[179])/log(2.0);
    variables[130] = log10(variables[179]);
    variables[131] = log(variables[179])/log(variables[180]);
    variables[132] = ceil(variables[179]);
    variables[133] = floor(variables[179]);
    variables[134] = min(variables[179], variables[180]);
    variables[135] = min(variables[179], min(variables[180], variables[181]));
    variables[136] = max(variables[179], variables[180]);
    variables[137] = max(variables[179], max(variables[180], variables[181]));
    variables[138] = fmod(variables[179], variables[180]);
    variables[139] = sin(variables[179]);
    variables[140] = cos(variables[179]);
    variables[141] = tan(variables[179]);
    variables[142] = sec(variables[179]);
    variables[143] = csc(variables[179]);
    variables[144] = cot(variables[179]);
    variables[145] = sinh(variables[179]);
    variables[146] = cosh(variables[179]);
    variables[147] = tanh(variables[179]);
    variables[148] = sech(variables[179]);
    variables[149] = csch(variables[179]);
    variables[150] = coth(variables[179]);
    variables[151] = asin(variables[179]);
    variables[152] = acos(variables[179]);
    variables[153] = atan(variables[179]);
    variables[154] = asec(variables[179]);
    variables[155] = acsc(variables[179]);
    variables[156] = acot(variables[179]);
    variables[157] = asinh(variables[179]);
    variables[158] = acosh(variables[179]);
    variables[159] = atanh(variables[179]/2.0);
    variables[160] = asech(variables[179]);
    variables[161] = acsch(variables[179]);
    variables[162] = acoth(2.0*variables[179]);
    variables[163] = piecewise(variables[179] > variables[180], variables[179], NAN);
    variables[164] = piecewise(variables[179] > variables[180], variables[179], variables[181]);
    variables[165] = piecewise(variables[179] > variables[180], variables[179], piecewise(variables[181] > variables[182], variables[181], piecewise(variables[183] > variables[184], variables[183], NAN)));
    variables[166] = piecewise(variables[179] > variables[180], variables[179], piecewise(variables[181] > variables[182], variables[181], piecewise(variables[183] > variables[184], variables[183], variables[185])));
    variables[167] = 123.0+piecewise(variables[179] > variables[180], variables[179], NAN);
    variables[172] = variables[179];
}

void computeRates(double voi, double *states, double *rates, double *variables)
{
    rates[0] = 1.0;
}
