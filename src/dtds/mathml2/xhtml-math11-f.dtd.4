ckground
     "background   CDATA                    #IMPLIED" >
<!ENTITY % att-veryverythinmathspace
     "veryverythinmathspace   CDATA         #IMPLIED" >
<!ENTITY % att-verythinmathspace
     "verythinmathspace   CDATA             #IMPLIED" >
<!ENTITY % att-thinmathspace
     "thinmathspace   CDATA                 #IMPLIED" >
<!ENTITY % att-mediummathspace
     "mediummathspace   CDATA               #IMPLIED" >
<!ENTITY % att-thickmathspace
     "thickmathspace   CDATA                #IMPLIED" >
<!ENTITY % att-verythickmathspace
     "verythickmathspace   CDATA            #IMPLIED" >
<!ENTITY % att-veryverythickmathspace
     "veryverythickmathspace   CDATA        #IMPLIED" >
<!ENTITY % att-open
     "open         CDATA                    #IMPLIED" >
<!ENTITY % att-close
     "close        CDATA                    #IMPLIED" >
<!ENTITY % att-separators
     "separators   CDATA                    #IMPLIED" >
<!ENTITY % att-subscriptshift
     "subscriptshift CDATA                  #IMPLIED" >
<!ENTITY % att-superscriptshift
     "superscriptshift CDATA                #IMPLIED" >
<!ENTITY % att-accentunder
     "accentunder  ( true | false )         #IMPLIED" >
<!ENTITY % att-align
     "align        CDATA                    #IMPLIED" >
<![%MathMLstrict;[
  <!ENTITY % att-numalign
     "numalign     ( left | center | right )         #IMPLIED" >
  <!ENTITY % att-denomalign
     "denomalign   ( left | center | right )         #IMPLIED" >
]]>
<!ENTITY % att-numalign
     "numalign        CDATA                    #IMPLIED" >
<!ENTITY % att-denomalign
     "denomalign        CDATA                    #IMPLIED" >
<!ENTITY % att-rowalign-list
     "rowalign     CDATA                    #IMPLIED" >
<!ENTITY % att-columnalign-list
     "columnalign  CDATA                    #IMPLIED" >
<![%MathMLstrict;[
  <!ENTITY % att-rowalign
     "rowalign     ( top | bottom |	center | baseline | axis )    #IMPLIED" >
  <!ENTITY % att-columnalign
     "columnalign  ( left | center | right )        #IMPLIED" >
]]>
<!ENTITY % att-rowalign
     "rowalign     CDATA                    #IMPLIED" >
<!ENTITY % att-columnalign
     "columnalign  CDATA                    #IMPLIED" >
<!ENTITY % att-columnwidth
     "columnwidth  CDATA                    #IMPLIED" >
<!ENTITY % att-groupalign-list
     "groupalign   CDATA                    #IMPLIED" >
<![%MathMLstrict;[
  <!ENTITY % att-groupalign
     "groupalign   ( left | right | center | decimalpoint )   #IMPLIED" >
]]>
<!ENTITY % att-groupalign
     "groupalign   CDATA                    #IMPLIED" >
<!ENTITY % att-alignmentscope
     "alignmentscope CDATA                  #IMPLIED" >
<!ENTITY % att-rowspacing
     "rowspacing   CDATA                    #IMPLIED" >
<!ENTITY % att-columnspacing
     "columnspacing CDATA                   #IMPLIED" >
<!ENTITY % att-rowlines
     "rowlines     CDATA                    #IMPLIED" >
<!ENTITY % att-columnlines
     "columnlines  CDATA                    #IMPLIED" >
<!ENTITY % att-frame
     "frame       ( none | solid | dashed ) #IMPLIED" >
<!ENTITY % att-side
     "side       ( left | right | leftoverlap | rightoverlap ) #IMPLIED" >
<!ENTITY % att-framespacing
     "framespacing CDATA                    #IMPLIED" >
<!ENTITY % att-minlabelspacing
     "minlabelspacing CDATA                 #IMPLIED" >
<![%MathMLstrict;[
  <!ENTITY % att-equalrows
     "equalrows    ( true | false )         #IMPLIED" >
  <!ENTITY % att-equalcolumns
     "equalcolumns ( true | false )         #IMPLIED" >
]]>
<!ENTITY % att-equalrows
     "equalrows    CDATA                    #IMPLIED" >
<!ENTITY % att-equalcolumns
     "equalcolumns CDATA                    #IMPLIED" >

<!ENTITY % att-tableinfo
     "%att-align;
      %att-rowalign-list;
      %att-columnalign-list;
      %att-columnwidth;
      %att-groupalign-list;
      %att-alignmentscope;
      %att-side;
      %att-rowspacing;
      %att-columnspacing;
      %att-rowlines;
      %att-columnlines;
      %att-width;
      %att-frame;
      %att-framespacing;
      %att-minlabelspacing;
      %att-equalrows;
      %att-equalcolumns;
      %att-displaystyle;"
>

<!ENTITY % att-rowspan
     "rowspan      CDATA                    #IMPLIED" >
<!ENTITY % att-columnspan
     "columnspan   CDATA                    #IMPLIED" >
<!ENTITY % att-edge
     "edge         ( left | right )         #IMPLIED" >
<!ENTITY % att-actiontype
     "actiontype   CDATA                    #IMPLIED" >
<!ENTITY % att-selection
     "selection    CDATA                    #IMPLIED" >

<!ENTITY % att-name
     "name         CDATA                    #IMPLIED" >
<!ENTITY % att-alt
     "alt          CDATA                    #IMPLIED" >
<!ENTITY % att-index
     "index        CDATA                    #IMPLIED" >

<![%MathMLstrict;[
  <!ENTITY % att-bevelled
     "bevelled      ( true | false )        #IMPLIED" >
]]>
<!ENTITY % att-bevelled
     "bevelled      CDATA                    #IMPLIED" >

<!-- Presentation schemata with content -->

<!ENTITY % ptoken
     "%mi.qname; | %mn.qname; | %mo.qname;
      | %mtext.qname; | %ms.qname;" >

<!ATTLIST %mi.qname;
      %MATHML.Common.attrib;
      %att-fontinfo;
>

<!ATTLIST %mn.qname;
      %MATHML.Common.attrib;
      %att-fontinfo;
>

<!ATTLIST %mo.qname;
      %MATHML.Common.attrib;
      %att-fontinfo;
      %att-opinfo;
>

<!ATTLIST %mtext.qname;
      %MATHML.Common.attrib;
      %att-fontinfo;
>

<!ATTLIST %ms.qname;
      %MATHML.Common.attrib;
      %att-fontinfo;
      %att-lquote;
      %att-rquote;
>

<!-- Empty presentation schemata -->

<!ENTITY % petoken
     "%mspace.qname;" >
<!ELEMENT %mspace.qname;  EMPTY >

<!ATTLIST %mspace.qname;
      %att-sizeinfo;
      %att-linebreak;
      %MATHML.Common.attrib;
>

<!-- Presentation: general layout schemata -->

<!ENTITY % pgenschema
     "%mrow.qname; | %mfrac.qname; | %msqrt.qname; | %mroot.qname;
      | %menclose.qname; | %mstyle.qname; | %merror.qname;
      | %mpadded.qname; | %mphantom.qname; | %mfenced.qname;" >

<!ATTLIST %mrow.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %mfrac.qname;
      %MATHML.Common.attrib;
      %att-bevelled;
      %att-numalign;
      %att-denomalign;
      %att-linethickness;
>

<!ATTLIST %msqrt.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %menclose.qname;
      %MATHML.Common.attrib;
      notation CDATA 'longdiv' >

<!ATTLIST %mroot.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %mstyle.qname;
      %MATHML.Common.attrib;
      %att-fontinfo;
      %att-opinfo;
      %att-lquote;
      %att-rquote;
      %att-linethickness;
      %att-scriptlevel;
      %att-scriptsizemultiplier;
      %att-scriptminsize;
      %att-background;
      %att-veryverythinmathspace;
      %att-verythinmathspace;
      %att-thinmathspace;
      %att-mediummathspace;
      %att-thickmathspace;
      %att-verythickmathspace;
      %att-veryverythickmathspace;
      %att-open;
      %att-close;
      %att-separators;
      %att-subscriptshift;
      %att-superscriptshift;
      %att-accentunder;
      %att-tableinfo;
      %att-rowspan;
      %att-columnspan;
      %att-edge;
      %att-selection;
      %att-bevelled;
      %att-height;
      %att-depth;
>

<!ATTLIST %merror.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %mpadded.qname;
      %MATHML.Common.attrib;
      %att-sizeinfo;
      %att-lspace;
>

<!ATTLIST %mphantom.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %mfenced.qname;
      %MATHML.Common.attrib;
      %att-open;
      %att-close;
      %att-separators;
>

<!-- Presentation layout schemata: scripts and limits -->

<!ENTITY % pscrschema
     "%msub.qname; | %msup.qname; | %msubsup.qname; | %munder.qname;
      | %mover.qname; | %munderover.qname; | %mmultiscripts.qname;" >

<!ATTLIST %msub.qname;
      %MATHML.Common.attrib;
      %att-subscriptshift;
>

<!ATTLIST %msup.qname;
      %MATHML.Common.attrib;
      %att-superscriptshift;
>

<!ATTLIST %msubsup.qname;
      %MATHML.Common.attrib;
      %att-subscriptshift;
      %att-superscriptshift;
>

<!ATTLIST %munder.qname;
      %MATHML.Common.attrib;
      %att-accentunder;
>

<!ATTLIST %mover.qname;
      %MATHML.Common.attrib;
      %att-accent;
>

<!ATTLIST %munderover.qname;
      %MATHML.Common.attrib;
      %att-accent;
      %att-accentunder;
>

<!ATTLIST %mmultiscripts.qname;
      %MATHML.Common.attrib;
      %att-subscriptshift;
      %att-superscriptshift;
>

<!-- Presentation layout schemata: empty elements for scripts -->

<!ENTITY % pscreschema
     "%mprescripts.qname; | %none.qname;" >

<!ELEMENT %mprescripts.qname;  EMPTY >
<!ATTLIST %mprescripts.qname;
      %MATHML.xmlns.attrib; >

<!ELEMENT %none.qname;  EMPTY >
<!ATTLIST %none.qname;
      %MATHML.xmlns.attrib; >

<!-- Presentation layout schemata: tables -->

<![%MathMLstrict;[
<!-- in strict mode only allow mtable at top level.
     mtr ,mlabledtr and mtd only allowed inside mtable.
-->
  <!ENTITY % ptabschema    "%mtable.qname;" >
]]>

<!ENTITY % ptabschema
     "%mtable.qname; | %mtr.qname; | %mlabeledtr.qname; | %mtd.qname;" >

<!ATTLIST %mtable.qname;
      %MATHML.Common.attrib;
      %att-tableinfo;
>

<!ATTLIST %mtr.qname;
      %MATHML.Common.attrib;
      %att-rowalign;
      %att-columnalign-list;
      %att-groupalign-list;
>

<!ATTLIST %mlabeledtr.qname;
      %MATHML.Common.attrib;
      %att-rowalign;
      %att-columnalign-list;
      %att-groupalign-list;
>

<!ATTLIST %mtd.qname;
      %MATHML.Common.attrib;
      %att-rowalign;
      %att-columnalign;
      %att-groupalign-list;
      %att-rowspan;
      %att-columnspan;
>
<!ENTITY % plschema
     "%pgenschema; | %pscrschema; | %ptabschema;" >

<!-- Empty presentation layout schemata -->

<!ENTITY % peschema
     "%maligngroup.qname; | %malignmark.qname;" >

<!ELEMENT %malignmark.qname;  EMPTY >

<!ATTLIST %malignmark.qname;
      %att-edge; >

<!ELEMENT %maligngroup.qname;  EMPTY >
<!ATTLIST %maligngroup.qname;
      %MATHML.Common.attrib;
      %att-groupalign;
>


<!ELEMENT %mglyph.qname;  EMPTY >
<!ATTLIST %mglyph.qname;
      %att-alt;
      %att-fontfamily;
      %att-index; >

<!-- Presentation action schemata -->

<!ENTITY % pactions
     "%maction.qname;" >
<!ATTLIST %maction.qname;
      %MATHML.Common.attrib;
      %att-actiontype;
      %att-selection;
>

<!-- The following entity for substitution into
     content constructs excludes elements that
     are not valid as expressions.
-->

<!ENTITY % PresInCont
     "%ptoken; | %petoken; |
      %plschema; | %peschema; | %pactions;" >

<!-- Presentation entity: all presentation constructs -->


<![%MathMLstrict;[
<!-- In strict mode don't allow prescripts and none at top level.-->
  <!ENTITY % Presentation "%PresInCont;">
]]>
<!ENTITY % Presentation
     "%ptoken; | %petoken; | %pscreschema; |
      %plschema; | %peschema; | %pactions;">

<!-- Content element set  ........................................ -->

<!-- Attribute definitions -->

<!ENTITY % att-base
     "base         CDATA                    '10'" >
<!ENTITY % att-closure
     "closure      CDATA                    'closed'" >
<!ENTITY % att-definition
     "definitionURL CDATA                   ''" >
<!ENTITY % att-encoding
     "encoding     CDATA                    ''" >
<!ENTITY % att-nargs
     "nargs        CDATA                    '1'" >
<!ENTITY % att-occurrence
     "occurrence   CDATA                    'function-model'" >
<!ENTITY % att-order
     "order        CDATA                    'numeric'" >
<!ENTITY % att-scope
     "scope        CDATA                    'local'" >
<!ENTITY % att-type
     "type         CDATA                    #IMPLIED" >

<!-- Content elements: leaf nodes -->

<!ENTITY % ctoken
     "%csymbol.qname; | %ci.qname; | %cn.qname;" >

<!ATTLIST %ci.qname;
      %MATHML.Common.attrib;
      %att-type;
      %att-definition;
      %att-encoding;
>

<!ATTLIST %csymbol.qname;
      %MATHML.Common.attrib;
      %att-encoding;
      %att-type;
      %att-definition;
>

<!ATTLIST %cn.qname;
      %MATHML.Common.attrib;
      %att-type;
      %att-base;
      %att-definition;
      %att-encoding;
>

<!-- Content elements: specials -->

<!ENTITY % cspecial
     "%apply.qname; | %reln.qname; |
      %lambda.qname;" >

<!ATTLIST %apply.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %reln.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %lambda.qname;
      %MATHML.Common.attrib;
>

<!-- Content elements: others -->

<!ENTITY % cother
     "%condition.qname; | %declare.qname; | %sep.qname;" >

<!ATTLIST %condition.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %declare.qname;
      %MATHML.Common.attrib;
      %att-type;
      %att-scope;
      %att-nargs;
      %att-occurrence;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %sep.qname;  EMPTY >
<!ATTLIST %sep.qname;
      %MATHML.xmlns.attrib; >

<!-- Content elements: semantic mapping -->

<![%MathMLstrict;[
<!-- in strict mode only allow semantics at top level.
     annotation and annotation-xml only allowed in semantics
-->
  <!ENTITY % csemantics  "%semantics.qname;" >
]]>
<!ENTITY % csemantics
     "%semantics.qname; | %annotation.qname; |
      %annotation-xml.qname;" >

<!ATTLIST %semantics.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ATTLIST %annotation.qname;
      %MATHML.Common.attrib;
      %att-encoding;
>

<!ATTLIST %annotation-xml.qname;
      %MATHML.Common.attrib;
      %att-encoding;
>

<!-- Content elements: constructors -->

<!ENTITY % cconstructor
     "%interval.qname; | %list.qname; | %matrix.qname;
      | %matrixrow.qname; | %set.qname; | %vector.qname;
      | %piecewise.qname; " >

<!ATTLIST %interval.qname;
      %MATHML.Common.attrib;
      %att-closure;
>

<!ATTLIST %set.qname;
      %MATHML.Common.attrib;
      %att-type;
>

<!ATTLIST %list.qname;
      %MATHML.Common.attrib;
      %att-order;
>

<!ATTLIST %vector.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %matrix.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %matrixrow.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %piecewise.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %piece.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %otherwise.qname;
      %MATHML.Common.attrib;
>


<!-- Content elements: symbols -->

<!ENTITY % c0ary
    "%integers.qname; |
     %reals.qname; |
     %rationals.qname; |
     %naturalnumbers.qname; |
     %complexes.qname; |
     %primes.qname; |
     %exponentiale.qname; |
     %imaginaryi.qname; |
     %notanumber.qname; |
     %true.qname; |
     %false.qname; |
     %emptyset.qname; |
     %pi.qname; |
     %eulergamma.qname; |
     %infinity.qname;" >

<!ELEMENT %integers.qname;  EMPTY >
<!ATTLIST %integers.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %reals.qname;  EMPTY >
<!ATTLIST %reals.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %rationals.qname;  EMPTY >
<!ATTLIST %rationals.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %naturalnumbers.qname;  EMPTY >
<!ATTLIST %naturalnumbers.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %complexes.qname;  EMPTY >
<!ATTLIST %complexes.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %primes.qname;  EMPTY >
<!ATTLIST %primes.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %exponentiale.qname;  EMPTY >
<!ATTLIST %exponentiale.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %imaginaryi.qname;  EMPTY >
<!ATTLIST %imaginaryi.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %notanumber.qname;  EMPTY >
<!ATTLIST %notanumber.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %true.qname;  EMPTY >
<!ATTLIST %true.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %false.qname;  EMPTY >
<!ATTLIST %false.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %emptyset.qname;  EMPTY >
<!ATTLIST %emptyset.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %pi.qname;  EMPTY >
<!ATTLIST %pi.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %eulergamma.qname;  EMPTY >
<!ATTLIST %eulergamma.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %infinity.qname;  EMPTY >
<!ATTLIST %infinity.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!-- Content elements: operators -->

<!ENTITY % cfuncop1ary
     "%inverse.qname; | %ident.qname;|
      %domain.qname; |  %codomain.qname; |
      %image.qname;  " >

<!ELEMENT %inverse.qname;  EMPTY >
<!ATTLIST %inverse.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %domain.qname;  EMPTY >
<!ATTLIST %domain.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %codomain.qname;  EMPTY >
<!ATTLIST %codomain.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %image.qname;  EMPTY >
<!ATTLIST %image.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>



<!ENTITY % cfuncopnary
     "%fn.qname; | %compose.qname;" >

<!ATTLIST %fn.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %ident.qname;  EMPTY >
<!ATTLIST %ident.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %compose.qname;  EMPTY >
<!ATTLIST %compose.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % carithop1ary
     "%abs.qname; | %conjugate.qname; | %exp.qname; | %factorial.qname; |
      %arg.qname; | %real.qname; | %imaginary.qname; |
      %floor.qname; | %ceiling.qname;" >

<!ELEMENT %exp.qname;  EMPTY >
<!ATTLIST %exp.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %abs.qname;  EMPTY >
<!ATTLIST %abs.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arg.qname;  EMPTY >
<!ATTLIST %arg.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %real.qname;  EMPTY >
<!ATTLIST %real.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %imaginary.qname;  EMPTY >
<!ATTLIST %imaginary.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %conjugate.qname;  EMPTY >
<!ATTLIST %conjugate.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %factorial.qname;  EMPTY >
<!ATTLIST %factorial.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>


<!ELEMENT %floor.qname;  EMPTY >
<!ATTLIST %floor.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %ceiling.qname;  EMPTY >
<!ATTLIST %ceiling.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>
<!ENTITY % carithop1or2ary
     "%minus.qname;" >

<!ELEMENT %minus.qname;  EMPTY >
<!ATTLIST %minus.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % carithop2ary
     "%quotient.qname; | %divide.qname; | %power.qname; | %rem.qname;" >

<!ELEMENT %quotient.qname;  EMPTY >
<!ATTLIST %quotient.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %divide.qname;  EMPTY >
<!ATTLIST %divide.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %power.qname;  EMPTY >
<!ATTLIST %power.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %rem.qname;  EMPTY >
<!ATTLIST %rem.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % carithopnary
     "%plus.qname; | %times.qname; | %max.qname;
      | %min.qname; | %gcd.qname; | %lcm.qname;" >

<!ELEMENT %plus.qname;  EMPTY >
<!ATTLIST %plus.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %max.qname;  EMPTY >
<!ATTLIST %max.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %min.qname;  EMPTY >
<!ATTLIST %min.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %times.qname;  EMPTY >
<!ATTLIST %times.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %gcd.qname;  EMPTY >
<!ATTLIST %gcd.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %lcm.qname;  EMPTY >
<!ATTLIST %lcm.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % carithoproot
     "%root.qname;" >

<!ELEMENT %root.qname;  EMPTY >
<!ATTLIST %root.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % clogicopquant
     "%exists.qname; | %forall.qname;" >

<!ELEMENT %exists.qname;  EMPTY >
<!ATTLIST %exists.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %forall.qname;  EMPTY >
<!ATTLIST %forall.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % clogicopnary
     "%and.qname; | %or.qname; | %xor.qname;" >

<!ELEMENT %and.qname;  EMPTY >
<!ATTLIST %and.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %or.qname;  EMPTY >
<!ATTLIST %or.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %xor.qname;  EMPTY >
<!ATTLIST %xor.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % clogicop1ary
     "%not.qname;" >

<!ELEMENT %not.qname;  EMPTY >
<!ATTLIST %not.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % clogicop2ary
     "%implies.qname;" >

<!ELEMENT %implies.qname;  EMPTY >
<!ATTLIST %implies.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % ccalcop
     "%log.qname; | %int.qname; | %diff.qname; | %partialdiff.qname; |
      %divergence.qname; | %grad.qname; | %curl.qname; | %laplacian.qname;" >

<!ELEMENT %divergence.qname;  EMPTY >
<!ATTLIST %divergence.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %grad.qname;  EMPTY >
<!ATTLIST %grad.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %curl.qname;  EMPTY >
<!ATTLIST %curl.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %laplacian.qname;  EMPTY >
<!ATTLIST %laplacian.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %log.qname;  EMPTY >
<!ATTLIST %log.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %int.qname;  EMPTY >
<!ATTLIST %int.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %diff.qname;  EMPTY >
<!ATTLIST %diff.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %partialdiff.qname;  EMPTY >
<!ATTLIST %partialdiff.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % ccalcop1ary
     "%ln.qname;" >

<!ELEMENT %ln.qname;  EMPTY >
<!ATTLIST %ln.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % csetop1ary
     "%card.qname;" >

<!ELEMENT %card.qname;  EMPTY >
<!ATTLIST %card.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % csetop2ary
     "%setdiff.qname;" >

<!ELEMENT %setdiff.qname;  EMPTY >
<!ATTLIST %setdiff.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % csetopnary
     "%union.qname; | %intersect.qname; | %cartesianproduct.qname; " >

<!ELEMENT %union.qname;  EMPTY >
<!ATTLIST %union.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %intersect.qname;  EMPTY >
<!ATTLIST %intersect.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %cartesianproduct.qname;  EMPTY >
<!ATTLIST %cartesianproduct.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % cseqop
     "%sum.qname; | %product.qname; | %limit.qname;" >

<!ELEMENT %sum.qname;  EMPTY >
<!ATTLIST %sum.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %product.qname;  EMPTY >
<!ATTLIST %product.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %limit.qname;  EMPTY >
<!ATTLIST %limit.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % ctrigop
     "%sin.qname; | %cos.qname; | %tan.qname;
      | %sec.qname; | %csc.qname; | %cot.qname;
      | %sinh.qname; | %cosh.qname; | %tanh.qname;
      | %sech.qname; | %csch.qname; | %coth.qname;
      | %arcsin.qname; | %arccos.qname; | %arctan.qname;
      | %arccosh.qname; | %arccot.qname; | %arccoth.qname;
      | %arccsc.qname; | %arccsch.qname; | %arcsec.qname;
      | %arcsech.qname; | %arcsinh.qname; | %arctanh.qname;
      " >

<!ELEMENT %sin.qname;  EMPTY >
<!ATTLIST %sin.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %cos.qname;  EMPTY >
<!ATTLIST %cos.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %tan.qname;  EMPTY >
<!ATTLIST %tan.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %sec.qname;  EMPTY >
<!ATTLIST %sec.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %csc.qname;  EMPTY >
<!ATTLIST %csc.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %cot.qname;  EMPTY >
<!ATTLIST %cot.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %sinh.qname;  EMPTY >
<!ATTLIST %sinh.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %cosh.qname;  EMPTY >
<!ATTLIST %cosh.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %tanh.qname;  EMPTY >
<!ATTLIST %tanh.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %sech.qname;  EMPTY >
<!ATTLIST %sech.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %csch.qname;  EMPTY >
<!ATTLIST %csch.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %coth.qname;  EMPTY >
<!ATTLIST %coth.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arcsin.qname;  EMPTY >
<!ATTLIST %arcsin.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arccos.qname;  EMPTY >
<!ATTLIST %arccos.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arctan.qname;  EMPTY >
<!ATTLIST %arctan.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arccosh.qname;  EMPTY >
<!ATTLIST %arccosh.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>


<!ELEMENT %arccot.qname;  EMPTY >
<!ATTLIST %arccot.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arccoth.qname;  EMPTY >
<!ATTLIST %arccoth.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>


<!ELEMENT %arccsc.qname;  EMPTY >
<!ATTLIST %arccsc.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arccsch.qname;  EMPTY >
<!ATTLIST %arccsch.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arcsec.qname;  EMPTY >
<!ATTLIST %arcsec.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arcsech.qname;  EMPTY >
<!ATTLIST %arcsech.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arcsinh.qname;  EMPTY >
<!ATTLIST %arcsinh.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %arctanh.qname;  EMPTY >
<!ATTLIST %arctanh.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>



<!ENTITY % cstatopnary
     "%mean.qname; | %sdev.qname; |
      %variance.qname; | %median.qname; |
      %mode.qname;" >

<!ELEMENT %mean.qname;  EMPTY >
<!ATTLIST %mean.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %sdev.qname;  EMPTY >
<!ATTLIST %sdev.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %variance.qname;  EMPTY >
<!ATTLIST %variance.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %median.qname;  EMPTY >
<!ATTLIST %median.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %mode.qname;  EMPTY >
<!ATTLIST %mode.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % cstatopmoment
     "%moment.qname;" >

<!ELEMENT %moment.qname;  EMPTY >
<!ATTLIST %moment.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % clalgop1ary
     "%determinant.qname; |
      %transpose.qname;" >

<!ELEMENT %determinant.qname;  EMPTY >
<!ATTLIST %determinant.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %transpose.qname;  EMPTY >
<!ATTLIST %transpose.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % clalgop2ary
     "%vectorproduct.qname;
      | %scalarproduct.qname;
      | %outerproduct.qname;" >

<!ELEMENT %vectorproduct.qname;  EMPTY >
<!ATTLIST %vectorproduct.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %scalarproduct.qname;  EMPTY >
<!ATTLIST %scalarproduct.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %outerproduct.qname;  EMPTY >
<!ATTLIST %outerproduct.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % clalgopnary
     "%selector.qname;" >

<!ELEMENT %selector.qname;  EMPTY >
<!ATTLIST %selector.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!-- Content elements: relations -->

<!ENTITY % cgenrel2ary
     "%neq.qname; | %factorof.qname;" >

<!ELEMENT %neq.qname;  EMPTY >
<!ATTLIST %neq.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %factorof.qname;  EMPTY >
<!ATTLIST %factorof.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % cgenrelnary
     "%eq.qname; | %leq.qname; | %lt.qname; | %geq.qname;
      | %gt.qname;| %equivalent.qname; | %approx.qname;" >

<!ELEMENT %eq.qname;  EMPTY >
<!ATTLIST %eq.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %equivalent.qname;  EMPTY >
<!ATTLIST %equivalent.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %approx.qname;  EMPTY >
<!ATTLIST %approx.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %gt.qname;  EMPTY >
<!ATTLIST %gt.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %lt.qname;  EMPTY >
<!ATTLIST %lt.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %geq.qname;  EMPTY >
<!ATTLIST %geq.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %leq.qname;  EMPTY >
<!ATTLIST %leq.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % csetrel2ary
     "%in.qname; | %notin.qname; | %notsubset.qname; | %notprsubset.qname;" >

<!ELEMENT %in.qname;  EMPTY >
<!ATTLIST %in.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %notin.qname;  EMPTY >
<!ATTLIST %notin.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %notsubset.qname;  EMPTY >
<!ATTLIST %notsubset.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %notprsubset.qname;  EMPTY >
<!ATTLIST %notprsubset.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % csetrelnary
     "%subset.qname; | %prsubset.qname;" >

<!ELEMENT %subset.qname;  EMPTY >
<!ATTLIST %subset.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ELEMENT %prsubset.qname;  EMPTY >
<!ATTLIST %prsubset.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
>

<!ENTITY % cseqrel2ary
     "%tendsto.qname;" >

<!ELEMENT %tendsto.qname;  EMPTY >
<!ATTLIST %tendsto.qname;
      %MATHML.Common.attrib;
      %att-definition;
      %att-encoding;
      %att-type;
>

<!-- Content elements: quantifiers -->

<!ENTITY % cquantifier
     "%lowlimit.qname; | %uplimit.qname; | %bvar.qname;
      | %degree.qname; | %logbase.qname;
      | %momentabout.qname; | %domainofapplication.qname; " >

<!ATTLIST %lowlimit.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %uplimit.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %bvar.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %degree.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %logbase.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %momentabout.qname;
      %MATHML.Common.attrib;
>

<!ATTLIST %domainofapplication.qname;
      %MATHML.Common.attrib;
>

<!-- Operator groups -->

<!ENTITY % cop1ary
     "%cfuncop1ary; | %carithop1ary; | %clogicop1ary; |
      %ccalcop1ary; | %ctrigop; | %clalgop1ary; |
      %csetop1ary;" >

<!ENTITY % cop2ary
     "%carithop2ary; | %clogicop2ary;| %clalgop2ary; | %csetop2ary;" >

<!ENTITY % copnary
     "%cfuncopnary; | %carithopnary; | %clogicopnary; |
      %csetopnary; | %cstatopnary; | %clalgopnary;" >

<!ENTITY % copmisc
     "%carithoproot; | %carithop1or2ary; | %ccalcop; |
      %cseqop; | %cstatopmoment; | %clogicopquant;" >

<!-- Relation groups -->

<!ENTITY % crel2ary
     "%cgenrel2ary; | %csetrel2ary; | %cseqrel2ary;" >

<!ENTITY % crelnary
     "%cgenrelnary; | %csetrelnary;" >

<!-- Content constructs: all -->

<!ENTITY % Content
     "%ctoken; | %cspecial; | %cother; | %csemantics; | %c0ary;
      | %cconstructor; | %cquantifier; | %cop1ary; | %cop2ary;
      | %copnary; |%copmisc; | %crel2ary; | %crelnary;" >

<!-- Content constructs for substitution in presentation structures -->

<!ENTITY % ContInPres
     "%ci.qname; |%csymbol.qname;| %cn.qname; | %c0ary; |
      %apply.qname; | %fn.qname; |
      %lambda.qname; | %reln.qname; |
      %cconstructor; |
      %semantics.qname; |%declare.qname;" >

<!-- ............................................................. -->
<!-- Recursive definition for content of expressions. Include
     presentation constructs at lowest level so presentation
     layout schemata hold presentation or content elements.
     Include content constructs at lowest level so content
     elements hold PCDATA or presentation elements at leaf
     level (for permitted substitutable elements in context)
-->
<![%MathMLstrict;[
<!-- in strict mode don't allow presentation in content
     except where allowed by chapter 5:
     ci, cn, csymbol, semantics
-->
  <!ENTITY % ContentExpression  "(%Content;)*" >
  <!ENTITY % semanticsContentExpression
       "(%Content; | %PresInCont; |
         %annotation.qname; | %annotation-xml.qname;)*" >
]]>
<!ENTITY % ContentExpression
     "(%Content; | %PresInCont;)*" >
<!ENTITY % semanticsContentExpression    "%ContentExpression;">


<!ENTITY % PresExpression
     "(%Presentation; | %ContInPres;)*" >
<!ENTITY % MathExpression
     "(%PresInCont; | %ContInPres;)*" >

<!-- PCDATA or MathML character elements -->
<!ENTITY % MathMLCharacters
     "#PCDATA | %mglyph.qname; " >

<!-- Content elements: tokens                       -->
<!-- (may contain embedded presentation constructs) -->

<!ELEMENT %ci.qname;                 (%MathMLCharacters; | %PresInCont;)* >
<!ELEMENT %csymbol.qname;            (%MathMLCharacters; | %PresInCont;)* >
<!ELEMENT %cn.qname;                 (%MathMLCharacters; | %sep.qname; | %PresInCont;)* >

<!-- Content elements: special -->

<!ELEMENT %apply.qname;              (%ContentExpression;) >
<!ELEMENT %reln.qname;               (%ContentExpression;) >
<!ELEMENT %lambda.qname;             (%ContentExpression;) >

<!-- Content elements: other -->

<!ELEMENT %condition.qname;          (%ContentExpression;) >
<!ELEMENT %declare.qname;            (%ContentExpression;) >

<!-- Content elements: semantics -->

<!ELEMENT %semantics.qname;          (%semanticsContentExpression;) >
<!ENTITY % Annotation.content  "( #PCDATA )" >
<!ELEMENT %annotation.qname;         %Annotation.content; >

<!ENTITY % Annotation-xml.content "ANY" >
<!ELEMENT %annotation-xml.qname;     %Annotation-xml.content; >

<!-- Content elements: constructors -->

<!ELEMENT %interval.qname;           (%ContentExpression;) >
<!ELEMENT %set.qname;                (%ContentExpression;) >
<!ELEMENT %list.qname;               (%ContentExpression;) >
<!ELEMENT %vector.qname;             (%ContentExpression;) >
<!ELEMENT %matrix.qname;             (%ContentExpression;) >
<!ELEMENT %matrixrow.qname;          (%ContentExpression;) >

<!ELEMENT %piecewise.qname;          ((%piece.qname;)*, (%otherwise.qname;)? ) >
<!ELEMENT %piece.qname;              (%ContentExpression;) >
<!ELEMENT %otherwise.qname;          (%ContentExpression;) >

<!-- Content elements: operator (user-defined) -->

<!ELEMENT %fn.qname;                 (%ContentExpression;) >

<!-- Content elements: quantifiers -->

<!ELEMENT %lowlimit.qname;           (%ContentExpression;) >
<!ELEMENT %uplimit.qname;            (%ContentExpression;) >
<!ELEMENT %bvar.qname;               (%ContentExpression;) >
<!ELEMENT %degree.qname;             (%ContentExpression;) >
<!ELEMENT %logbase.qname;            (%ContentExpression;) >
<!ELEMENT %momentabout.qname;        (%ContentExpression;) >
<!ELEMENT %domainofapplication.qname; (%ContentExpression;) >

<!-- ............................................................. -->
<!-- Presentation layout schemata contain tokens,
     layout and content schemata.
-->



<![%MathMLstrict;[
<!-- In strict mode enforce mfrac has exactly two children
      same for msub etc -->
  <!ENTITY % onePresExpression
       "(%Presentation; | %ContInPres;)" >
  <!ENTITY % twoPresExpression
       "(%onePresExpression;,%onePresExpression;)" >
  <!ENTITY % threePresExpression
       "(%onePresExpression;,%onePresExpression;,%onePresExpression;)" >
  <!ENTITY % mtrPresExpression
       "(%mtr.qname;|%mlabeledtr.qname;)*" >
  <!ENTITY % mtdPresExpression
       "(%mtd.qname;)*" >
  <!ENTITY % prscrPresExpression " (%onePresExpression;,
  ((%onePresExpression;|%none.qname;),(%onePresExpression;|%none.qname;))*,
  (%mprescripts.qname;,
  ((%onePresExpression;|%none.qname;),(%onePresExpression;|%none.qname;))*)?
  )">
]]>


<!-- By default keep them as they were in MathML 2.0  -->
<!ENTITY % onePresExpression   "%PresExpression;">
<!ENTITY % twoPresExpression   "%PresExpression;">
<!ENTITY % threePresExpression "%PresExpression;">
<!ENTITY % mtrPresExpression   "%PresExpression;">
<!ENTITY % mtdPresExpression   "%PresExpression;">
<!ENTITY % prscrPresExpression "%PresExpression;">

<!ELEMENT %mstyle.qname;             (%PresExpression;) >
<!ELEMENT %merror.qname;             (%PresExpression;) >
<!ELEMENT %mphantom.qname;           (%PresExpression;) >
<!ELEMENT %mrow.qname;               (%PresExpression;) >
<!ELEMENT %mfrac.qname;              (%twoPresExpression;) >
<!ELEMENT %msqrt.qname;              (%PresExpression;) >
<!ELEMENT %menclose.qname;           (%PresExpression;) >
<!ELEMENT %mroot.qname;              (%twoPresExpression;) >
<!ELEMENT %msub.qname;               (%twoPresExpression;) >
<!ELEMENT %msup.qname;               (%twoPresExpression;) >
<!ELEMENT %msubsup.qname;            (%threePresExpression;) >
<!ELEMENT %mmultiscripts.qname;      (%prscrPresExpression;) >
<!ELEMENT %munder.qname;             (%twoPresExpression;) >
<!ELEMENT %mover.qname;              (%twoPresExpression;) >
<!ELEMENT %munderover.qname;         (%threePresExpression;) >
<!ELEMENT %mtable.qname;             (%mtrPresExpression;) >
<!ELEMENT %mtr.qname;                (%mtdPresExpression;) >
<!ELEMENT %mlabeledtr.qname;         (%mtdPresExpression;) >
<!ELEMENT %mtd.qname;                (%PresExpression;) >
<!ELEMENT %maction.qname;            (%PresExpression;) >
<!ELEMENT %mfenced.qname;            (%PresExpression;) >
<!ELEMENT %mpadded.qname;            (%PresExpression;) >

<!-- Presentation elements contain PCDATA or malignmark constructs. -->

<!ELEMENT %mi.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %mn.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %mo.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %mtext.qname;              (%MathMLCharacters; |
      %malignmark.qname;)* >
<!ELEMENT %ms.qname;                 (%MathMLCharacters; |
      %malignmark.qname;)* >

<!-- Browser interface definition  ............................... -->

<!-- Attributes for top-level element "math" -->

<!ENTITY % att-macros
     "macros       CDATA                    #IMPLIED" >
<!ENTITY % att-mode
     "mode         CDATA                    #IMPLIED" >
<![%MathMLstrict;[
  <!ENTITY % att-display
     "display      ( block | inline )                    'inline'" >
]]>
<!ENTITY % att-display
     "display      CDATA                    #IMPLIED" >

<!ENTITY % att-schemalocation
     "%Schema.prefix;:schemaLocation CDATA  #IMPLIED">

<!ENTITY % att-topinfo
     "%MATHML.Common.attrib;
      %att-schemalocation;
      %att-macros;
      %att-mode;
      %att-display;" >

<!-- Attributes for browser interface element -->

<!ENTITY % att-baseline
     "baseline     CDATA                    #IMPLIED" >
<!ENTITY % att-overflow
     "overflow  ( scroll | elide | truncate | scale ) 'scroll'" >
<!ENTITY % att-altimg
     "altimg       CDATA                    #IMPLIED" >
<!ENTITY % att-alttext
     "alttext      CDATA                    #IMPLIED" >

<!ENTITY % att-browif
     "%att-type;
      %att-name;
      %att-height;
      %att-width;
      %att-baseline;
      %att-overflow;
      %att-altimg;
      %att-alttext;" >

<!-- ............................................................. -->
<!-- The top-level element "math" contains MathML encoded
     mathematics. The "math" element has the browser info
     attributes iff it is also the browser interface element.
-->

<!ELEMENT %math.qname;               (%MathExpression;) >

<!ATTLIST %math.qname;
      %att-topinfo;
      %att-browif; >

<!-- MathML Character Entities .............................................. -->
<!ENTITY % mathml-charent.module "INCLUDE" >
<![%mathml-charent.module;[
<!-- Entity sets from ISO Technical Report 9573-13 ..... -->

<!ENTITY % ent-isoamsa
      PUBLIC "-//W3C//ENTITIES Added Math Symbols: Arrow Relations for MathML 2.0//EN"
             "iso9573-13/isoamsa.ent" >

<!--
     File isoamsa.ent produced by the XSL script characters.xsl
     from input data in unicode.xml.

     Please report any errors to David Carlisle
     via the public W3C list www-math@w3.org.

     The numeric character values assigned to each entity
     (should) match the Unicode assignments in Unicode 4.0.

     Entity names in this file are derived from files carrying the
     following notice:

     (C) International Organization for Standardization 1991
     Permission to copy in any form is granted for use with
     conforming SGML systems and applications as defined in
     ISO 8879, provided this notice is included in all copies.

-->

<!ENTITY angzarr          "&#x0237C;" ><!--angle with down zig-zag arrow -->
<!ENTITY cirmid           "&#x02AEF;" ><!--circle, mid below -->
<!ENTITY cudarrl          "&#x02938;" ><!--left, curved, down arrow -->
<!ENTITY cudarrr          "&#x02935;" ><!--right, curved, down arrow -->
<!ENTITY cularr           "&#x021B6;" ><!--/curvearrowleft A: left curved arrow -->
<!ENTITY cularrp          "&#x0293D;" ><!--curved left arrow with plus -->
<!ENTITY curarr           "&#x021B7;" ><!--/curvearrowright A: rt curved arrow -->
<!ENTITY curarrm          "&#x0293C;" ><!--curved right arrow with minus -->
<!ENTITY Darr             "&#x021A1;" ><!--down two-headed arrow -->
<!ENTITY dArr             "&#x021D3;" ><!--/Downarrow A: down dbl arrow -->
<!ENTITY ddarr            "&#x021CA;" ><!--/downdownarrows A: two down arrows -->
<!ENTITY DDotrahd         "&#x02911;" ><!--right arrow with dotted stem -->
<!ENTITY dfisht           "&#x0297F;" ><!--down fish tail -->
<!ENTITY dHar             "&#x02965;" ><!--down harpoon-left, down harpoon-right -->
<!ENTITY dharl            "&#x021C3;" ><!--/downharpoonleft A: dn harpoon-left -->
<!ENTITY dharr            "&#x021C2;" ><!--/downharpoonright A: down harpoon-rt -->
<!ENTITY duarr            "&#x021F5;" ><!--down arrow, up arrow -->
<!ENTITY duhar            "&#x0296F;" ><!--down harp, up harp -->
<!ENTITY dzigrarr         "&#x027FF;" ><!--right long zig-zag arrow -->
<!ENTITY erarr            "&#x02971;" ><!--equal, right arrow below -->
<!ENTITY hArr             "&#x021D4;" ><!--/Leftrightarrow A: l&r dbl arrow -->
<!ENTITY harr             "&#x02194;" ><!--/leftrightarrow A: l&r arrow -->
<!ENTITY harrcir          "&#x02948;" ><!--left and right arrow with a circle -->
<!ENTITY harrw            "&#x021AD;" ><!--/leftrightsquigarrow A: l&r arr-wavy -->
<!ENTITY hoarr            "&#x021FF;" ><!--horizontal open arrow -->
<!ENTITY imof             "&#x022B7;" ><!--image of -->
<!ENTITY lAarr            "&#x021DA;" ><!--/Lleftarrow A: left triple arrow -->
<!ENTITY Larr             "&#x0219E;" ><!--/twoheadleftarrow A: -->
<!ENTITY larrbfs          "&#x0291F;" ><!--left arrow-bar, filled square -->
<!ENTITY larrfs           "&#x0291D;" ><!--left arrow, filled square -->
<!ENTITY larrhk           "&#x021A9;" ><!--/hookleftarrow A: left arrow-hooked -->
<!ENTITY larrlp           "&#x021AB;" ><!--/looparrowleft A: left arrow-looped -->
<!ENTITY larrpl           "&#x02939;" ><!--left arrow, plus -->
<!ENTITY larrsim          "&#x02973;" ><!--left arrow, similar -->
<!ENTITY larrtl           "&#x021A2;" ><!--/leftarrowtail A: left arrow-tailed -->
<!ENTITY lAtail           "&#x0291B;" ><!--left double arrow-tail -->
<!ENTITY latail           "&#x02919;" ><!--left arrow-tail -->
<!ENTITY lBarr            "&#x0290E;" ><!--left doubly broken arrow -->
<!ENTITY lbarr            "&#x0290C;" ><!--left broken arrow -->
<!ENTITY ldca             "&#x02936;" ><!--left down curved arrow -->
<!ENTITY ldrdhar          "&#x02967;" ><!--left harpoon-down over right harpoon-down -->
<!ENTITY ldrushar         "&#x0294B;" ><!--left-down-right-up harpoon -->
<!ENTITY ldsh             "&#x021B2;" ><!--left down angled arrow -->
<!ENTITY lfisht           "&#x0297C;" ><!--left fish tail -->
<!ENTITY lHar             "&#x02962;" ><!--left harpoon-up over left harpoon-down -->
<!ENTITY lhard            "&#x021BD;" ><!--/leftharpoondown A: l harpoon-down -->
<!ENTITY lharu            "&#x021BC;" ><!--/leftharpoonup A: left harpoon-up -->
<!ENTITY lharul           "&#x0296A;" ><!--left harpoon-up over long dash -->
<!ENTITY llarr            "&#x021C7;" ><!--/leftleftarrows A: two left arrows -->
<!ENTITY llhard           "&#x0296B;" ><!--left harpoon-down below long dash -->
<!ENTITY loarr            "&#x021FD;" ><!--left open arrow -->
<!ENTITY lrarr            "&#x021C6;" ><!--/leftrightarrows A: l arr over r arr -->
<!ENTITY lrhar            "&#x021CB;" ><!--/leftrightharpoons A: l harp over r -->
<!ENTITY lrhard           "&#x0296D;" ><!--right harpoon-down below long dash -->
<!ENTITY lsh              "&#x021B0;" ><!--/Lsh A: -->
<!ENTITY lurdshar         "&#x0294A;" ><!--left-up-right-down harpoon -->
<!ENTITY luruhar          "&#x02966;" ><!--left harpoon-up over right harpoon-up -->
<!ENTITY Map              "&#x02905;" ><!--twoheaded mapsto -->
<!ENTITY map              "&#x021A6;" ><!--/mapsto A: -->
<!ENTITY midcir           "&#x02AF0;" ><!--mid, circle below  -->
<!ENTITY mumap            "&#x022B8;" ><!--/multimap A: -->
<!ENTITY nearhk           "&#x02924;" ><!--NE arrow-hooked -->
<!ENTITY neArr            "&#x021D7;" ><!--NE pointing dbl arrow -->
<!ENTITY nearr            "&#x02197;" ><!--/nearrow A: NE pointing arrow -->
<!ENTITY nesear           "&#x02928;" ><!--/toea A: NE & SE arrows -->
<!ENTITY nhArr            "&#x021CE;" ><!--/nLeftrightarrow A: not l&r dbl arr -->
<!ENTITY nharr            "&#x021AE;" ><!--/nleftrightarrow A: not l&r arrow -->
<!ENTITY nlArr            "&#x021CD;" ><!--/nLeftarrow A: not implied by -->
<!ENTITY nlarr            "&#x0219A;" ><!--/nleftarrow A: not left arrow -->
<!ENTITY nrArr            "&#x021CF;" ><!--/nRightarrow A: not implies -->
<!ENTITY nrarr            "&#x0219B;" ><!--/nrightarrow A: not right arrow -->
<!ENTITY nrarrc           "&#x02933;&#x00338;" ><!--not right arrow-curved -->
<!ENTITY nrarrw           "&#x0219D;&#x00338;" ><!--not right arrow-wavy -->
<!ENTITY nvHarr           "&#x02904;" ><!--not, vert, left and right double arrow  -->
<!ENTITY nvlArr           "&#x02902;" ><!--not, vert, left double arrow -->
<!ENTITY nvrArr           "&#x02903;" ><!--not, vert, right double arrow -->
<!ENTITY nwarhk           "&#x02923;" ><!--NW arrow-hooked -->
<!ENTITY nwArr            "&#x021D6;" ><!--NW pointing dbl arrow -->
<!ENTITY nwarr            "&#x02196;" ><!--/nwarrow A: NW pointing arrow -->
<!ENTITY nwnear           "&#x02927;" ><!--NW & NE arrows -->
<!ENTITY olarr            "&#x021BA;" ><!--/circlearrowleft A: l arr in circle -->
<!ENTITY orarr            "&#x021BB;" ><!--/circlearrowright A: r arr in circle -->
<!ENTITY origof           "&#x022B6;" ><!--original of -->
<!ENTITY rAarr            "&#x021DB;" ><!--/Rrightarrow A: right triple arrow -->
<!ENTITY Rarr             "&#x021A0;" ><!--/twoheadrightarrow A: -->
<!ENTITY rarrap           "&#x02975;" ><!--approximate, right arrow above -->
<!ENTITY rarrbfs          "&#x02920;" ><!--right arrow-bar, filled square -->
<!ENTITY rarrc            "&#x02933;" ><!--right arrow-curved -->
<!ENTITY rarrfs           "&#x0291E;" ><!--right arrow, filled square -->
<!ENTITY rarrhk           "&#x021AA;" ><!--/hookrightarrow A: rt arrow-hooked -->
<!ENTITY rarrlp           "&#x021AC;" ><!--/looparrowright A: rt arrow-looped -->
<!ENTITY rarrpl           "&#x02945;" ><!--right arrow, plus -->
<!ENTITY rarrsim          "&#x02974;" ><!--right arrow, similar -->
<!ENTITY Rarrtl           "&#x02916;" ><!--right two-headed arrow with tail -->
<!ENTITY rarrtl           "&#x021A3;" ><!--/rightarrowtail A: rt arrow-tailed -->
<!ENTITY rarrw            "&#x0219D;" ><!--/rightsquigarrow A: rt arrow-wavy -->
<!ENTITY rAtail           "&#x0291C;" ><!--right double arrow-tail -->
<!ENTITY ratail           "&#x0291A;" ><!--right arrow-tail -->
<!ENTITY RBarr            "&#x02910;" ><!--/drbkarow A: twoheaded right broken arrow -->
<!ENTITY rBarr            "&#x0290F;" ><!--/dbkarow A: right doubly broken arrow -->
<!ENTITY rbarr            "&#x0290D;" ><!--/bkarow A: right broken arrow -->
<!ENTITY rdca             "&#x02937;" ><!--right down curved arrow -->
<!ENTITY rdldhar          "&#x02969;" ><!--right harpoon-down over left harpoon-down -->
<!ENTITY rdsh             "&#x021B3;" ><!--right down angled arrow -->
<!ENTITY rfisht           "&#x0297D;" ><!--right fish tail -->
<!ENTITY rHar             "&#x02964;" ><!--right harpoon-up over right harpoon-down -->
<!ENTITY rhard            "&#x021C1;" ><!--/rightharpoondown A: rt harpoon-down -->
<!ENTITY rharu            "&#x021C0;" ><!--/rightharpoonup A: rt harpoon-up -->
<!ENTITY rharul           "&#x0296C;" ><!--right harpoon-up over long dash -->
<!ENTITY rlarr            "&#x021C4;" ><!--/rightleftarrows A: r arr over l arr -->
<!ENTITY rlhar            "&#x021CC;" ><!--/rightleftharpoons A: r harp over l -->
<!ENTITY roarr            "&#x021FE;" ><!--right open arrow -->
<!ENTITY rrarr            "&#x021C9;" ><!--/rightrightarrows A: two rt arrows -->
<!ENTITY rsh              "&#x021B1;" ><!--/Rsh A: -->
<!ENTITY ruluhar          "&#x02968;" ><!--right harpoon-up over left harpoon-up -->
<!ENTITY searhk           "&#x02925;" ><!--/hksearow A: SE arrow-hooken -->
<!ENTITY seArr            "&#x021D8;" ><!--SE pointing dbl arrow -->
<!ENTITY searr            "&#x02198;" ><!--/searrow A: SE pointing arrow -->
<!ENTITY seswar           "&#x02929;" ><!--/tosa A: SE & SW arrows -->
<!ENTITY simrarr          "&#x02972;" ><!--similar, right arrow below -->
<!ENTITY slarr            "&#x02190;" ><!--short left arrow -->
<!ENTITY srarr            "&#x02192;" ><!--short right arrow -->
<!ENTITY swarhk           "&#x02926;" ><!--/hkswarow A: SW arrow-hooked -->
<!ENTITY swArr            "&#x021D9;" ><!--SW pointing dbl arrow -->
<!ENTITY swarr            "&#x02199;" ><!--/swarrow A: SW pointing arrow -->
<!ENTITY swnwar           "&#x0292A;" ><!--SW & NW arrows -->
<!ENTITY Uarr             "&#x0219F;" ><!--up two-headed arrow -->
<!ENTITY uArr             "&#x021D1;" ><!--/Uparrow A: up dbl arrow -->
<!ENTITY Uarrocir         "&#x02949;" ><!--up two-headed arrow above circle -->
<!ENTITY udarr            "&#x021C5;" ><!--up arrow, down arrow -->
<!ENTITY udhar            "&#x0296E;" ><!--up harp, down harp -->
<!ENTITY ufisht           "&#x0297E;" ><!--up fish tail -->
<!ENTITY uHar             "&#x02963;" ><!--up harpoon-left, up harpoon-right -->
<!ENTITY uharl            "&#x021BF;" ><!--/upharpoonleft A: up harpoon-left -->
<!ENTITY uharr            "&#x021BE;" ><!--/upharpoonright /restriction A: up harp-r -->
<!ENTITY uuarr            "&#x021C8;" ><!--/upuparrows A: two up arrows -->
<!ENTITY vArr             "&#x021D5;" ><!--/Updownarrow A: up&down dbl arrow -->
<!ENTITY varr             "&#x02195;" ><!--/updownarrow A: up&down arrow -->
<!ENTITY xhArr            "&#x027FA;" ><!--/Longleftrightarrow A: long l&r dbl arr -->
<!ENTITY xharr            "&#x027F7;" ><!--/longleftrightarrow A: long l&r arr -->
<!ENTITY xlArr            "&#x027F8;" ><!--/Longleftarrow A: long l dbl arrow -->
<!ENTITY xlarr            "&#x027F5;" ><!--/longleftarrow A: long left arrow -->
<!ENTITY xmap             "&#x027FC;" ><!--/longmapsto A: -->
<!ENTITY xrArr            "&#x027F9;" ><!--/Longrightarrow A: long rt dbl arr -->
<!ENTITY xrarr            "&#x027F6;" ><!--/longrightarrow A: long right arrow -->
<!ENTITY zigrarr          "&#x021DD;" ><!--right zig-zag arrow -->


<!ENTITY % ent-isoamsb
      PUBLIC "-//W3C//ENTITIES Added Math Symbols: Binary Operators for MathML 2.0//EN"
             "iso9573-13/isoamsb.ent" >

<!--
     File isoamsb.ent produced by the XSL script characters.xsl
     from input data in unicode.xml.

     Please report any errors to David Carlisle
     via the public W3C list www-math@w3.org.

     The numeric character values assigned to each entity
     (should) match the Unicode assignments in Unicode 4.0.

     References to the VARIANT SELECTOR 1 character (&#x0FE00;)
     should match the uses listed in Unicode Technical Report 25.

     Entity names in this file are derived from files carrying the
     following notice:

     (C) International Organization for Standardization 1991
     Permission to copy in any form is granted for use with
     conforming SGML systems and applications as defined in
     ISO 8879, provided this notice is included in all copies.

-->

<!ENTITY ac               "&#x0223E;" ><!--most positive -->
<!ENTITY acE              "&#x0223E;&#x00333;" ><!--most positive, two lines below -->
<!ENTITY amalg            "&#x02A3F;" ><!--/amalg B: amalgamation or coproduct -->
<!ENTITY barvee           "&#x022BD;" ><!--bar, vee -->
<!ENTITY Barwed           "&#x02306;" ><!--/doublebarwedge B: log and, dbl bar above -->
<!ENTITY barwed           "&#x02305;" ><!--/barwedge B: logical and, bar above -->
<!ENTITY bsolb            "&#x029C5;" ><!--reverse solidus in square -->
<!ENTITY Cap              "&#x022D2;" ><!--/Cap /doublecap B: dbl intersection -->
<!ENTITY capand           "&#x02A44;" ><!--intersection, and -->
<!ENTITY capbrcup         "&#x02A49;" ><!--intersection, bar, union -->
<!ENTITY capcap           "&#x02A4B;" ><!--intersection, intersection, joined -->
<!ENTITY capcup           "&#x02A47;" ><!--intersection above union -->
<!ENTITY capdot           "&#x02A40;" ><!--intersection, with dot -->
<!ENTITY caps             "&#x02229;&#x0FE00;" ><!--intersection, serifs -->
<!ENTITY ccaps            "&#x02A4D;" ><!--closed intersection, serifs -->
<!ENTITY ccups            "&#x02A4C;" ><!--closed union, serifs -->
<!ENTITY ccupssm          "&#x02A50;" ><!--closed union, serifs, smash product -->
<!ENTITY coprod           "&#x02210;" ><!--/coprod L: coproduct operator -->
<!ENTITY Cup              "&#x022D3;" ><!--/Cup /doublecup B: dbl union -->
<!ENTITY cupbrcap         "&#x02A48;" ><!--union, bar, intersection -->
<!ENTITY cupcap           "&#x02A46;" ><!--union above intersection -->
<!ENTITY cupcup           "&#x02A4A;" ><!--union, union, joined -->
<!ENTITY cupdot           "&#x0228D;" ><!--union, with dot -->
<!ENTITY cupor            "&#x02A45;" ><!--union, or -->
<!ENTITY cups             "&#x0222A;&#x0FE00;" ><!--union, serifs -->
<!ENTITY cuvee            "&#x022CE;" ><!--/curlyvee B: curly logical or -->
<!ENTITY cuwed            "&#x022CF;" ><!--/curlywedge B: curly logical and -->
<!ENTITY Dagger           "&#x02021;" ><!--/ddagger B: double dagger relation -->
<!ENTITY dagger           "&#x02020;" ><!--/dagger B: dagger relation -->
<!ENTITY diam             "&#x022C4;" ><!--/diamond B: open diamond -->
<!ENTITY divonx           "&#x022C7;" ><!--/divideontimes B: division on times -->
<!ENTITY eplus            "&#x02A71;" ><!--equal, plus -->
<!ENTITY hercon           "&#x022B9;" ><!--hermitian conjugate matrix -->
<!ENTITY intcal           "&#x022BA;" ><!--/intercal B: intercal -->
<!ENTITY iprod            "&#x02A3C;" ><!--/intprod -->
<!ENTITY loplus           "&#x02A2D;" ><!--plus sign in left half circle -->
<!ENTITY lotimes          "&#x02A34;" ><!--multiply sign in left half circle  -->
<!ENTITY lthree           "&#x022CB;" ><!--/leftthreetimes B: -->
<!ENTITY ltimes           "&#x022C9;" ><!--/ltimes B: times sign, left closed -->
<!ENTITY midast           "&#x0002A;" ><!--/ast B: asterisk -->
<!ENTITY minusb           "&#x0229F;" ><!--/boxminus B: minus sign in box -->
<!ENTITY minusd           "&#x02238;" ><!--/dotminus B: minus sign, dot above -->
<!ENTITY minusdu          "&#x02A2A;" ><!--minus sign, dot below -->
<!ENTITY ncap             "&#x02A43;" ><!--bar, intersection -->
<!ENTITY ncup             "&#x02A42;" ><!--bar, union -->
<!ENTITY oast             "&#x0229B;" ><!--/circledast B: asterisk in circle -->
<!ENTITY ocir             "&#x0229A;" ><!--/circledcirc B: small circle in circle -->
<!ENTITY odash            "&#x0229D;" ><!--/circleddash B: hyphen in circle -->
<!ENTITY odiv             "&#x02A38;" ><!--divide in circle -->
<!ENTITY odot             "&#x02299;" ><!--/odot 